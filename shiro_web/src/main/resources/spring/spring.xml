<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="spring-dao.xml"/>
    <import resource="spring-redis.xml"/>
    <context:component-scan base-package="com.immoc"/>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="login.html"/>
        <property name="unauthorizedUrl" value="403.html"/>
        <property name="filterChainDefinitions">
            <value>
                /login.html = anon
                /subLogin = anon
                /testRole=roles[admin]
                /testRole1=roles[admin1]
                /testRoleOr=rolesOr[admin,admin1]
                /* = authc
            </value>
        </property>
        <property name="filters">
            <util:map>
                <entry key="rolesOr" value-ref="rolesOrFilter"/>
            </util:map>
        </property>
    </bean>

    <bean id="rolesOrFilter" class="com.immoc.shiro.filter.RoleOrFilter"/>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 创建 SecurityManager 对象 -->
        <property name="realm" ref="realm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="cookieRememberMeManager" />
    </bean>

    <bean id="realm" class="com.immoc.shiro.realm.CustomRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
    </bean>

    <!-- 使用默认的 sessionManager 会频繁的操作读 redis 使用自定义的 CustomSessionManager -->
<!--     <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"> -->
		<bean id="sessionManager" class="com.immoc.shiro.session.CustomSessionManager">
        <property name="sessionDAO" ref="sessionDao"/>
    </bean>

    <bean id="sessionDao" class="com.immoc.shiro.session.RedisSessionDao"/>
    
    <bean class="com.immoc.shiro.cache.CustomCacheManager" id="cacheManager"/>
    
    <bean class="org.apache.shiro.web.mgt.CookieRememberMeManager" id="cookieRememberMeManager">
    	<property name="cookie" ref="cookie" />
    </bean>
    
    <bean class="org.apache.shiro.web.servlet.SimpleCookie" id="cookie" >
    	<constructor-arg value="rememberMeCookie" />
    	<property name="maxAge" value="86400"/>
    </bean>

</beans>